<?xml version="1.0" encoding="UTF-8"?>
<openerp>
    <data>
        <record id="action_accept_to_paid" model="ir.actions.server">
            <field name="name">AV: Accept -> Paid</field>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="model_hr_expense_expense" />
            <field name="state">code</field>
            <field name="code">self.action_accept_to_paid(cr, uid, context.get('active_ids', []), context=context)</field>
        </record>
        <record id="action_pr_to_po" model="ir.actions.server">
            <field name="name">1 PR -> 1 PO</field>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="model_purchase_request" />
            <field name="state">code</field>
            <field name="code">self.action_pr_to_po(cr, uid, context.get('active_ids', []), context=context)</field>
        </record>
        <record id="action_req_to_po" model="ir.actions.server">
            <field name="name">1 CFB -> 1 PO</field>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="model_purchase_requisition" />
            <field name="state">code</field>
            <field name="code">self.action_req_to_po(cr, uid, context.get('active_ids', []), context=context)</field>
        </record>
        # Budget to be accepted
        <record id="action_budget_plan_unit_accepted" model="ir.actions.server">
            <field name="name">Accept Budget Plan</field>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="pabi_budget_plan.model_budget_plan_unit" />
            <field name="state">code</field>
            <field name="code">self.write(cr, uid, context.get('active_ids', []), {'state': 'accept'}, context=context)</field>
        </record>
        # PO Service to Invoice
        <record id="action_pr_to_inv" model="ir.actions.server">
            <field name="name">PO > WA > IN > IV > BL</field>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="model_purchase_order" />
            <field name="state">code</field>
            <field name="code">
context.update({'bypass_due_date_check': True})
self.action_po_to_invoice(cr, uid, context.get('active_ids', []), context=context)
            </field>
        </record>

        # Budget Control Sync My Project
        <record id="action_project_budget_sync_myproject" model="ir.actions.server">
            <field name="name">Sync Budget with myProject Plan + Set Controlled</field>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="account_budget_activity.model_account_budget" />
            <field name="state">code</field>
            <field name="code">
for active_id in context.get('active_ids', []):
  self.sync_budget_my_project(cr, uid, [active_id], context=context)
self.budget_done(cr, uid, context.get('active_ids', []), context=context)
            </field>
        </record>

        # Asset Fix Init JE (for migration)
        <record id="action_create_depre_init_entry_on_migration" model="ir.actions.server">
            <field name="name">Fix Init Depre JE</field>
            <field name="condition">True</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="model_hr_expense_expense" />
            <field name="state">code</field>
            <field name="code">self.create_depre_init_entry_on_migration(cr, uid, context.get('active_ids', []), context=context)</field>
        </record>
    </data>
</openerp>
