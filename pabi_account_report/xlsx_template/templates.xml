<?xml version="1.0" encoding="UTF-8"?>
<openerp>
    <data>
        <!-- Directory for Account XLSX Reports -->
        <record model="document.directory" id="dir_account_reports">
            <field name="name">Account Reports</field>
            <field name="parent_id" ref="document.dir_root"/>
            <field name="user_id" ref="base.user_root"/>
            <field name="ressource_id">0</field>
            <field name="group_ids" eval="[(4, ref('base.group_user'))]"/>
        </record>

        # Partner Detail
        <record id="xlsx_report_partner_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.partner.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_partner_detail.xlsx</field>
            <field name="name">Partner Detail</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Partner Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'category_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B4': 'active${value and (value == "true" and "True" or "False") or ""}',
                                'B5': 'customer${value and "X" or ""}',
                                'B6': 'supplier${value and "X" or ""}',
                                'B7': '${env.user.with_context(lang="th_TH").display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'partner_detail_results': {
                                'A11': 'search_key${value or ""}',
                                'B11': 'id${value and " ".join(list(filter(lambda l: l != False, [env["res.partner"].browse(value).title_lang, env["res.partner"].browse(value).with_context(lang="th_TH").name]))) or ""}',
                                'C11': 'customer${value and "X" or ""}',
                                'D11': 'supplier${value and "X" or ""}',
                                'E11': 'category_id.name${value or ""}',
                                'F11': 'tag_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'G11': 'street${value or ""}',
                                'H11': 'street2${value or ""}',
                                'I11': 'township_id.name${value or ""}',
                                'J11': 'district_id.name${value or ""}',
                                'K11': 'province_id.name${value or ""}',
                                'L11': 'country_id.name${value or ""}',
                                'M11': 'zip${value or ""}',
                                'N11': 'vat${value or ""}',
                                'O11': 'taxbranch${value or ""}',
                                'P11': 'mobile${value or ""}',
                                'Q11': 'fax${value or ""}',
                                'R11': 'website${value or ""}',
                                'S11': 'email${value or ""}',
                                'T11': 'comment${value or ""}',
                                'U11': 'property_account_payable.code${value or ""}',
                                'V11': 'property_account_payable.name${value or ""}',
                                'W11': 'property_account_receivable.code${value or ""}',
                                'X11': 'property_account_receivable.name${value or ""}',
                                'Y11': 'property_supplier_payment_term.name${value or ""}',
                                'Z11': 'property_payment_term.name${value or ""}',
                                'AA11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and value.filtered(lambda l: l.default is True)[0].acc_number or "") or ""}',
                                'AB11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and " ".join(filter(lambda x: x != False, [value.filtered(lambda l: l.default is True)[0].bank_name, value.filtered(lambda l: l.default is True)[0].bank_branch.name])) or "") or ""}',
                                'AC11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and " ".join(filter(lambda x: x != False, [value.filtered(lambda l: l.default is True)[0].partner_id.title_lang, value.filtered(lambda l: l.default is True)[0].partner_id.name])) or "") or ""}',
                                'AD11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and (value.filtered(lambda l: l.default is True)[0].active is True and "X" or "") or "") or ""}',
                                'AE11': 'bank_ids${value and (value.filtered(lambda l: l.default is True) and (value.filtered(lambda l: l.default is True)[0].default is True and "X" or "")) or ""}',
                                'AF11': 'income_tax_form${value and dict(pnd1="PND1", pnd3="PND3", pnd3a="PND3a", pnd53="PND53")[value] or ""}',
                                'AG11': 'create_date${value or ""}#{number_format=date}',
                                'AH11': 'create_uid${value and value.with_context(lang="th_TH").display_name or ""}',
                                'AI11': 'write_date${value or ""}#{number_format=date}',
                                'AJ11': 'write_uid${value and value.with_context(lang="th_TH").display_name or ""}',
                                'AK11': 'active${value and "X" or ""}',
                            },
                        },
                        'Bank Account': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'category_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B4': 'active${value and (value == "true" and "True" or "False") or ""}',
                                'B5': 'customer${value and "X" or ""}',
                                'B6': 'supplier${value and "X" or ""}',
                                'B7': '${env.user.with_context(lang="th_TH").display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'partner_bank_detail_results': {
                                'A11': 'partner_id.search_key${value or ""}',
                                'B11': 'partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title_lang, value.with_context(lang="th_TH").name]))) or ""}',
                                'C11': 'bank_id.acc_number${value or ""}',
                                'D11': 'bank_id${value and " ".join(list(filter(lambda l: l != False, [value.bank_name, value.bank_branch.name]))) or ""}',
                                'E11': 'bank_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title_lang, value.with_context(lang="th_TH").name]))) or ""}',
                                'F11': 'bank_id${value and (value.active is True and "X" or "") or ""}',
                                'G11': 'bank_id${value and (value.default is True and "X" or "") or ""}',
                            },
                        },
                    }
                }
            </field>
        </record>

        # Advance Status
        <record id="xlsx_report_advance_status" model="ir.attachment">
            <field name="res_model">xlsx.report.advance.status</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_advance_status.xlsx</field>
            <field name="name">Advance Status</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
              {
                '__EXPORT__': {
                    'Advance Status Report': {
                        '_HEAD_': {
                            'A1': '${env.user.company_id.display_name}',
                            'B3': '${date.today()}#{number_format=date}',
                            'B4': '${env.user.display_name}',
                            'B5': '${time.strftime("%d/%m/%Y")}',
                        },
                        'results': {
                            'A8': 'operating_unit_id.name${value or ""}',
                            'B8': 'number${value or ""}',
                            'C8': 'invoice_id.number${value or ""}',
                            'D8': 'remark${value or ""}',
                            'E8': 'invoice_id.date_invoice#{number_format=date}',
                            'F8': 'date_due#{number_format=date}',
                            'G8': 'employee_id.employee_code${value or ""}',
                            'H8': 'employee_id${value and value.first_name + " " + value.last_name or ""}',
                            'I8': 'amount_advanced${value or 0.0}',
                            'J8': 'days_diff${value or 0}',
                            'K8': 'amount_clearing_0${value or 0.0}',
                            'L8': 'amount_clearing_1${value or 0.0}',
                            'M8': 'amount_clearing_2${value or 0.0}',
                            'N8': 'amount_clearing_3${value or 0.0}',
                            'O8': 'amount_to_clearing${value or 0.0}',
                        }
                    },
                    'Summary': {
                        '_HEAD_': {
                            'A1': '${env.user.company_id.display_name}',
                            'B3': '${date.today()}#{number_format=date}',
                            'B4': '${env.user.display_name}',
                            'B5': '${time.strftime("%d/%m/%Y")}',
                        },
                        '_BI_': {
                            'A8': {
                                'df': 'Advance Status Report',
                                # Group by A and add Subtotal (so we use pivot)
                                # By scripting, we need result = ...
                                'oper_code': """
df = df[["A", "K", "L", "M", "N", "O"]]
groupby = ["A"]
sum_cols = ["K", "L", "M", "N", "O"]
result = pd.pivot_table(df, index=groupby,
                      values=sum_cols,
                      aggfunc=np.sum,
                      fill_value=0,
                      margins=True,
                      margins_name="Total")
                                """,
                            },
                        },
                    },
                    'Detailed Summary': {
                        '_HEAD_': {
                            'A1': '${env.user.company_id.display_name}',
                            'B3': '${date.today()}#{number_format=date}',
                            'B4': '${env.user.display_name}',
                            'B5': '${time.strftime("%d/%m/%Y")}',
                        },
                        '_BI_': {
                            'A8': {
                                'df': 'Advance Status Report',
                                # Group by A, H. User will have to do subtotal themselves
                                'oper_code': 'df[["A", "H", "K", "L", "M", "N", "O"]].groupby(["A", "H"]).sum()',
                            },
                        },
                    },
                }
            }
          </field>
        </record>

        # Supplier Invoice Detail
        <record id="xlsx_report_supplier_invoice_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.supplier.invoice.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_supplier_invoice_detail.xlsx</field>
            <field name="name">Supplier Invoice Detail</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
              {
                '__EXPORT__': {
                    'Supplier Invoice Detail Report': {
                        '_HEAD_': {
                            'B1': 'operating_unit_ids${value and ", ".join(value.mapped("name")) or ""}',
                            'B2': 'open${value and "X" or ""}',
                            'B3': 'paid${value and "X" or ""}',
                        },
                        'results': {
                            'A6': 'partner_id.search_key${value or ""}',
                            'B6': 'partner_id.display_name${value or ""}',
                            'C6': 'operating_unit_id.name${value or ""}',
                            'D6': 'supplier_invoice_number${value or ""}',
                            'E6': 'purchase_billing_id.name${value or ""}',
                            'F6': 'number${value or ""}',
                            'G6': 'date_invoice#{number_format=date}',
                            'H6': 'date_due#{number_format=date}',
                            'I6': 'source_document_id${value and value.display_name or ""}',
                            'J6': 'residual#{number_format=number}',
                            'K6': 'amount_untaxed#{number_format=number}',
                            'L6': 'amount_tax#{number_format=number}',
                            'M6': 'amount_total#{number_format=number}',
                            'N6': 'currency_id.name${value or ""}',
                            'O6': 'tax_line${value and value[0].name or ""}',
                            'P6': 'payment_ids${value and "\\skiprow".join([x.document_id.narration or "" for x in value]) or ""}',
                            'Q6': 'payment_ids${value and "\\skiprow".join([x.document_id.number or "" for x in value]) or ""}',
                            'R6': 'payment_ids${value and "\\skiprow".join([x.document_id.payment_export_id.name or "" for x in value]) or ""}',
                            'S6': 'payment_ids${value and "\\skiprow".join([x.document_id.payment_type and x.document_id.payment_type.title() or "" for x in value]) or ""}',
                            'T6': 'payment_ids${value and "\\skiprow".join([x.document_id.number_cheque or "" for x in value]) or ""}',
                            'U6': 'payment_ids${value and "\\skiprow".join([x.document_id.tax_line_wht.name or "" for x in value]) or ""}',
                            'V6': 'payment_ids${value and "\\skiprow".join([str(sum(x.document_id.tax_line_wht.mapped("amount"))) or "" for x in value]) or ""}#{number_format=number}',
                            'W6': 'user_id.display_name${value or ""}',
                            'X6': 'state${value and value.title() or ""}',
                        },
                    },
                }
            }
          </field>
        </record>

        # Cheque Register
        <record id="xlsx_report_cheque_register" model="ir.attachment">
            <field name="res_model">xlsx.report.cheque.register</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cheque_register.xlsx</field>
            <field name="name">Cheque Register</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Cheque Register Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'date_cheque_received${value or ""}#{number_format=date}',
                                'B4': 'cheque_lot_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B5': 'number_cheque_from${value or ""}',
                                'D5': 'number_cheque_to${value or ""}',
                                'B6': 'journal_ids${value and ", ".join([x.default_credit_account_id.code for x in value]) or ""}',
                                'B7': '${env.user.with_context(lang="th_TH").display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A11': 'cheque_lot_id.journal_id.default_credit_account_id.code${value or ""}',
                                'B11': 'cheque_lot_id.journal_id.default_credit_account_id.name${value or ""}',
                                'C11': 'voucher_id.partner_id.search_key${value or ""}',
                                'D11': 'voucher_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title_lang, value.with_context(lang="th_TH").name]))) or ""}',
                                'E11': 'cheque_lot_id.name${value or ""}',
                                'F11': 'number${value or ""}',
                                'G11': 'voucher_id.number${value or ""}',
                                'H11': 'voucher_id.date${value or ""}#{number_format=date}',
                                'I11': 'amount${value or ""}',
                                'J11': 'voucher_id.date_cheque_received${value or ""}#{number_format=date}',
                                'K11': 'voucher_id.move_ids${value and (value.mapped("match_import_id") and value.mapped("match_import_id").date_value or "") or ""}#{number_format=date}',
                                'L11': 'date_void${value or ""}#{number_format=date}',
                                'M11': 'payment_export_id.user_id${value and value.with_context(lang="th_TH").display_name or ""}',
                            },
                            '_TAIL_0': {
                                'H11': '${"Total"}#{font=bold;align=right}',
                                'I11': '@{sum}#{font=bold;number_format=number;align=right}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # PO Contract
        <record id="xlsx_report_purchase_contract" model="ir.attachment">
            <field name="res_model">xlsx.report.purchase.contract</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_purchase_contract.xlsx</field>
            <field name="name">PO Contract</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'PO Contract Report': {
                            '_HEAD_': {
                                'A1': '${env.user.company_id.display_name}',
                                'B3': 'date_report${value or ""}#{number_format=date;align=left}',
                                'B4': '${env.user.display_name}',
                                'B5': '${time.strftime("%d/%m/%Y")}#{number_format=date;align=left}',
                            },
                            'results': {
                                'A8': 'operating_unit_id${value and (value.org_id and value.org_id.name_short or "") or ""}',
                                'B8': 'supplier_id.search_key${value or ""}',
                                'C8': 'supplier_id.name${value or ""}',
                                'D8': 'name${value or ""}',
                                'E8': 'requisition_id.purchase_ids${value and (value.mapped("order_id").filtered(lambda l: l.state == "done") and value.mapped("order_id").filtered(lambda l: l.state == "done")[0].name or "") or ""}',
                                'F8': 'display_code${value or ""}',
                                'G8': 'start_date${value or ""}#{number_format=date}',
                                'H8': 'end_date${value or ""}#{number_format=date}',
                                'I8': 'collateral_type_id.name${value or ""}',
                                'J8': 'collateral_no${value or ""}',
                                'K8': 'collateral_date${value or ""}#{number_format=date}',
                                'L8': 'bank${value or ""}',
                                'M8': 'branch${value or ""}',
                                'N8': 'currency_id.name${value or ""}',
                                'O8': 'contract_amt${value or ""}#{number_format=number}',
                                'P8': 'collateral_agreement_amt${value or ""}#{number_format=number}',
                                'Q8': 'collateral_due_date${value or ""}#{number_format=date}',
                            },
                            '_TAIL_0': {
                                'P8': '@{sum}#{font=bold;number_format=number}',
                                'S8': '@{sum}#{font=bold;number_format=number}',
                                'T8': '@{sum}#{font=bold;number_format=number}',
                                'U8': '@{sum}#{font=bold;number_format=number}',
                                'V8': '@{sum}#{font=bold;number_format=number}',
                                'W8': '@{sum}#{font=bold;number_format=number}',
                                'X8': '@{sum}#{font=bold;number_format=number}',
                                'Y8': '@{sum}#{font=bold;number_format=number}',
                                'Z8': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Advance Payment
        <record id="xlsx_report_advance_payment" model="ir.attachment">
            <field name="res_model">xlsx.report.advance.payment</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_advance_payment.xlsx</field>
            <field name="name">Advance Payment</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Advance Payment Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B4': 'date_report${value or ""}#{number_format=date}',
                                'B5': '${env.user.with_context(lang="th_TH").display_name}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A9': 'org_id.name_short${value or ""}',
                                'B9': 'invoice_id.partner_id.search_key${value or ""}',
                                'C9': 'invoice_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title_lang, value.with_context(lang="th_TH").name]))) or ""}',
                                'D9': 'invoice_id.source_document_id${value and value.name or ""}',
                                'E9': 'invoice_id.source_document_id${value and value.contract_id.display_code or ""}',
                                'F9': 'invoice_id.partner_id.category_id${value and value.name or ""}',
                                'G9': 'invoice_id.number${value or ""}',
                                'H9': 'invoice_id.date_document${value or ""}#{number_format=date}',
                                'I9': 'invoice_id.date_invoice${value or ""}#{number_format=date}',
                                'J9': 'invoice_id.move_ids${value and value.filtered(lambda l: l.account_id == 199).name or ""}',
                                'K9': 'balance${value or ""}#{number_format=number}',
                                'L9': 'invoice_id.payment_ids${value and ", ".join([x.move_id.name for x in value.filtered(lambda l: l.doctype == "payment")]) or ""}',
                                'M9': 'invoice_id.payment_ids${value and ", ".join([x.move_id.date for x in value.filtered(lambda l: l.doctype == "payment")]) or ""}#{number_format=date}',
                                'N9': "${'=?(M9)+IF(?(F9)=\"ต่างประเทศ\",60,18)'}",
                                'O9': "${'=B4-?(N9)'}",
                                'P9': "${'=IF(?(O9)&lt;=0,?(K9),\"\")'}#{number_format=number}",
                                'Q9': "${'=IF(AND(?(O9)&gt;=1,?(O9)&lt;=30),?(K9),\"\")'}#{number_format=number}",
                                'R9': "${'=IF(AND(?(O9)&gt;=31,?(O9)&lt;=60),?(K9),\"\")'}#{number_format=number}",
                                'S9': "${'=IF(AND(?(O9)&gt;=61,?(O9)&lt;=90),?(K9),\"\")'}#{number_format=number}",
                                'T9': "${'=IF(AND(?(O9)&gt;=91,?(O9)&lt;=180),?(K9),\"\")'}#{number_format=number}",
                                'U9': "${'=IF(AND(?(O9)&gt;=181,?(O9)&lt;=365),?(K9),\"\")'}#{number_format=number}",
                                'V9': "${'=IF(AND(?(O9)&gt;365),?(K9),\"\")'}#{number_format=number}",
                            },
                            '_GROUPBY_results["org_id"]': {  # groupby
                                'K9': '@{sum}#{font=bold;number_format=number}',
                            },
                        }
                    }
                }
            </field>
        </record>

        # Payable Detail
        <record id="xlsx_report_payable_detail" model="ir.attachment">
            <field name="res_model">xlsx.report.payable.detail</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_payable_detail.xlsx</field>
            <field name="name">Payable Detail</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Payable Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.company_id.display_name}',
                                'B3': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B4': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title.name, x.name]))) for x in value]) or ""}',
                                'B5': 'start_fiscalyear_id${value and value.name or ""}',
                                'D5': 'end_fiscalyear_id${value and value.name or ""}',
                                'B6': 'start_period_id${value and value.name or ""}',
                                'D6': 'end_period_id${value and value.name or ""}',
                                'B7': 'start_doc_posting_date${value or ""}#{number_format=date;align=left}',
                                'D7': 'end_doc_posting_date${value or ""}#{number_format=date;align=left}',
                                'B8': 'start_doc_date${value or ""}#{number_format=date;align=left}',
                                'D8': 'end_doc_date${value or ""}#{number_format=date;align=left}',
                                'B9': 'move_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B10': '${env.user.display_name}',
                                'B11': '${time.strftime("%d/%m/%Y")}#{number_format=date;align=left}',
                            },
                            'results': {
                                'A14': 'move_line_id.partner_id.search_key${value or ""}',
                                'B14': 'move_line_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title.name, value.name]))) or ""}',
                                'C14': 'move_line_id.invoice.supplier_invoice_number${value or ""}',
                                'D14': 'move_line_id.invoice.purchase_billing_id.name${value or ""}',
                                'E14': 'move_line_id.move_id.name${value or ""}',
                                'F14': 'move_line_id.move_id.date_document${value or ""}#{number_format=date}',
                                'G14': 'move_line_id.period_id.fiscalyear_id.name${value or ""}',
                                'H14': 'move_line_id.period_id.name${value or ""}',
                                'I14': 'move_line_id.move_id.date${value or ""}#{number_format=date}',
                                'J14': 'move_line_id.invoice.date_due${value or ""}#{number_format=date}',
                                'K14': 'move_line_id.invoice.source_document_id${value and (value._table in ("purchase_order", "sale_order") and value.name or value.number) or ""}',
                                'L14': 'purchase_id.contract_id.display_code${value or ""}',
                                'M14': 'move_line_id.invoice.amount_untaxed${value or 0}#{number_format=number}',
                                'N14': 'move_line_id.invoice.amount_tax${value or 0}#{number_format=number}',
                                'O14': 'move_line_id${value and (value.debit != 0 and (-1) * value.debit or value.credit) or 0}#{number_format=number}',
                                'P14': 'move_line_id.currency_id.name${value or ""}',
                                'Q14': 'move_line_id.invoice.tax_line${value and (value[0].tax_code_id.code or "") or ""}',
                                'R14': 'move_line_id.move_id.narration${value or ""}',
                                'S14': 'voucher_id.number${value or ""}',
                                'T14': 'voucher_id.amount${value or 0}#{number_format=number}',
                                'U14': 'voucher_id${value and (value.payment_type == "transfer" and value.transfer_type or "cheque") or ""}',
                                'V14': 'export_id.name${value or ""}',
                                'W14': 'voucher_id.number_cheque${value or ""}',
                                'X14': 'voucher_id.income_tax_form${value or ""}',
                                'Y14': 'tax_id.amount${(-1) * value or 0}',
                                'Z14': 'move_line_id.move_id.create_uid.display_name${value or ""}',
                                'AA14': 'move_line_id.invoice.state${value or ""}',
                            },
                            '_TAIL_0': {
                                'M14': '@{sum}#{font=bold;number_format=number}',
                                'N14': '@{sum}#{font=bold;number_format=number}',
                                'O14': '@{sum}#{font=bold;number_format=number}',
                                'T14': '@{sum}#{font=bold;number_format=number}',
                                'Y14': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Payable Balance
        <record id="xlsx_report_payable_balance" model="ir.attachment">
            <field name="res_model">xlsx.report.payable.balance</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_payable_balance.xlsx</field>
            <field name="name">Payable Balance</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Payable Balance Report': {
                            '_HEAD_': {
                                'A1': '${env.user.company_id.display_name}',
                                'B3': 'partner_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B4': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B5': '${env.user.display_name}',
                                'B6': '${time.strftime("%d/%m/%Y")}#{number_format=date;align=left}',
                            },
                            'results': {
                                'A9': 'account_id.code${value or ""}',
                                'B9': 'partner_id.search_key${value or ""}',
                                'C9': 'partner_id.name${value or ""}',
                                'D9': 'partner_id${value and " ".join(list(filter(lambda x: x != False, [value.street, value.street2, value.township_id.name, value.district_id.name, value.province_id.name, value.zip]))) or ""}',
                                'E9': 'move_id.name${value or ""}',
                                'F9': 'invoice.supplier_invoice_number${value or ""}',
                                'G9': 'move_id.date${value or ""}#{number_format=date}',
                                'H9': 'move_id.narration${value or ""}',
                                'I9': 'id${value and (env["account.move.line"].browse(value).debit != 0 and (-1) * env["account.move.line"].browse(value).debit or env["account.move.line"].browse(value).credit) or 0}#{number_format=number}',
                                'J9': 'id${value and (env["account.move.line"].browse(value).reconcile_partial_id != "" and sum(list(env["account.move.line"].browse(value).reconcile_partial_id.line_partial_ids.mapped("credit"))) - sum(list(env["account.move.line"].browse(value).reconcile_partial_id.line_partial_ids.mapped("debit"))) or (env["account.move.line"].browse(value).credit - env["account.move.line"].browse(value).debit)) or 0}#{number_format=number}',
                            },
                            '_TAIL_0': {
                                'I9': '@{sum}#{font=bold;number_format=number}',
                                'J9': '@{sum}#{font=bold;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Purchase Billing
        <record id="xlsx_report_purchase_billing" model="ir.attachment">
            <field name="res_model">xlsx.report.purchase.billing</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_purchase_billing.xlsx</field>
            <field name="name">Purchase Billing</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Purchase Billing Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'billing_date_start${value or ""}#{number_format=date}',
                                'D3': 'billing_date_end${value or ""}#{number_format=date}',
                                'B4': 'billing_due_date_start${value or ""}#{number_format=date}',
                                'D4': 'billing_due_date_end${value or ""}#{number_format=date}',
                                'B5': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.title_lang, x.with_context(lang="th_TH").name]))) for x in value]) or ""}',
                                'B6': 'billing_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B7': '${env.user.with_context(lang="th_TH").display_name}',
                                'B8': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A11': 'invoice_id.purchase_billing_id.name${value or ""}',
                                'B11': 'invoice_id.purchase_billing_id.date${value or ""}#{number_format=date}',
                                'C11': 'invoice_id.purchase_billing_id.date_due${value or ""}#{number_format=date}',
                                'D11': 'invoice_id.purchase_billing_id.date_sent${value or ""}#{number_format=date}',
                                'E11': 'invoice_id.partner_id.search_key${value or ""}',
                                'F11': 'invoice_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title_lang, value.with_context(lang="th_TH").name]))) or ""}',
                                'G11': 'invoice_id.source_document_id${value and (value._table in ("purchase_order", "sale_order") and value.name or value.number or "")  or ""}',
                                'H11': 'invoice_id.source_document_id${value and ((value._table == "purchase_order" and value.contract_id) and value.contract_id.display_code or "") or ""}',
                                'I11': 'invoice_id.source_document_id${value and (value._table == "purchase_order" and value.notes or "") or ""}',
                                'J11': 'invoice_id.supplier_invoice_number${value or ""}',
                                'K11': 'invoice_id.amount_total${value or ""}',
                                'L11': 'invoice_id.number${value or ""}',
                                'M11': 'invoice_id.date_invoice${value or ""}#{number_format=date}',
                                'N11': 'invoice_id.date_due${value or ""}#{number_format=date}',
                                'O11': 'invoice_id.date_receipt_billing${value or ""}#{number_format=date}',
                                'P11': 'invoice_id.purchase_billing_id.user_id${value and value.with_context(lang="th_TH").display_name or ""}',
                                'Q11': 'invoice_id.state${value and dict(draft="Draft", proforma="Pro-forma", proforma2="Pro-forma", open="Open", paid="Paid", cancel="Cancelled")[value] or ""}',
                            },
                            '_TAIL_0': {
                                'J11': '${"Total"}#{font=bold;align=right}',
                                'K11': '@{sum}#{font=bold;number_format=number;align=right}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # SLA Purchase
        <record id="xlsx_report_sla_purchase" model="ir.attachment">
            <field name="res_model">xlsx.report.sla.purchase</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_sla_purchase.xlsx</field>
            <field name="name">SLA Purchase</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'SLA Purchase Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'user_ids${value and ", ".join([x.with_context(lang="th_TH").display_name for x in value]) or ""}',
                                'B8': '${env.user.with_context(lang="th_TH").display_name}',
                                'B9': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A12': 'voucher_id.period_id.fiscalyear_id.name${value or ""}',
                                'B12': 'voucher_id.number${value or ""}',
                                'C12': 'export_id.name${value or ""}',
                                'D12': 'count_invoice${value or ""}',
                                'E12': 'voucher_id.create_uid${value and value.with_context(lang="th_TH").display_name or ""}',
                                'F12': 'voucher_id.payment_type${value and dict(cheque="Cheque", transfer="Transfer")[value] or ""}',
                                'G12': 'voucher_id.date_value${value or ""}#{number_format=date}',
                                'H12': 'voucher_id.amount${value or ""}',
                                'I12': 'date_due${value or ""}#{number_format=date}',
                                'J12': 'voucher_id.date${value or ""}#{number_format=date}',
                                'K12': "${'=IF(?(I12)>=?(G12),\"Yes\",\"No\")'}",
                            },
                            '_TAIL_0': {
                                'C12': '${"Total"}#{font=bold;align=right}',
                                'D12': '@{sum}#{font=bold;number_format=number;align=right}',
                                'H12': '@{sum}#{font=bold;number_format=number;align=right}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # SLA Employee
        <record id="xlsx_report_sla_employee" model="ir.attachment">
            <field name="res_model">xlsx.report.sla.employee</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_sla_employee.xlsx</field>
            <field name="name">SLA Employee</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'SLA Employee Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'user_ids${value and ", ".join([x.with_context(lang="th_TH").display_name for x in value]) or ""}',
                                'B8': 'category_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B9': '${env.user.with_context(lang="th_TH").display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A13': 'invoice_id.date_invoice${value or ""}#{number_format=date}',
                                'B13': 'invoice_id.number${value or ""}',
                                'C13': 'voucher_id.number${value or ""}',
                                'D13': 'voucher_id.date${value or ""}#{number_format=date}',
                                'E13': 'invoice_id.comment${value or ""}',
                                'F13': 'voucher_line_id.amount${value or ""}',
                                'G13': 'invoice_id.source_document_id.number${value or ""}',
                                'H13': 'invoice_id.partner_id.category_id.name${value or ""}',
                                'I13': 'invoice_id.partner_id.search_key${value or ""}',
                                'J13': 'invoice_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title_lang, value.with_context(lang="th_TH").name]))) or ""}',
                                'K13': 'invoice_id.source_document_id.date_valid${value or ""}#{number_format=date}',
                                'L13': 'export_id.date_value${value or ""}#{number_format=date}',
                                'M13': 'voucher_id.move_ids${value and (value.mapped("match_import_id") and value.mapped("match_import_id").date_value or "") or ""}#{number_format=date}',
                                'N13': '${"=NETWORKDAYS(?(K13),?(L13),Holliday.B:B)"}',
                                'O13': "${'=IF(?(H13)=\"พนักงาน สวทช\",IF(?(N13)&lt;=5,\"YES\",\"NO\"),IF(?(N13)&lt;=10,\"YES\",\"NO\"))'}",
                                'P13': 'voucher_id.create_uid${value and value.with_context(lang="th_TH").display_name or ""}',
                            },
                            '_TAIL_0': {
                                'M13': '${"Total"}#{font=bold;align=right}',
                                'N13': '@{sum}#{font=bold;number_format=number;align=right}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Supplier Receipt Follow Up
        <record id="xlsx_report_supplier_receipt_follow_up" model="ir.attachment">
            <field name="res_model">xlsx.report.supplier.receipt.follow.up</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_supplier_receipt_follow_up.xlsx</field>
            <field name="name">Supplier Receipt Follow Up</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Supplier Receipt Follow Up Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B8': 'partner_ids${value and ", ".join([x.search_key for x in value]) or ""}',
                                'B9': 'followup_receipt${value and dict(following="Following", received="Received")[value] or ""}',
                                'B10': '${env.user.with_context(lang="th_TH").display_name}',
                                'B11': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A14': 'voucher_id.partner_id.search_key${value or ""}',
                                'B14': 'voucher_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.title_lang, value.with_context(lang="th_TH").name]))) or ""}',
                                'C14': 'voucher_id.number${value or ""}',
                                'D14': 'voucher_id.create_uid${value and value.with_context(lang="th_TH").display_name or ""}',
                                'E14': 'voucher_id.date_value${value or ""}#{number_format=date}',
                                'F14': 'voucher_id.move_ids${value and (value.mapped("match_import_id") and value.mapped("match_import_id").date_value or "") or ""}#{number_format=date}',
                                'G14': 'voucher_id.narration${value or ""}',
                                'H14': 'voucher_id.amount${value or ""}',
                                'I14': 'voucher_id.payment_type${value and dict(cheque="Cheque", transfer="Transfer")[value] or ""}',
                                'J14': 'voucher_id.number_cheque${value or ""}',
                                'K14': 'voucher_id.supplier_bank_id${value and " ".join(list(filter(lambda l: l != False, [value.bank_name, value.bank_branch.name]))) or ""}',
                                'L14': 'voucher_id.supplier_bank_id.acc_number${value or ""}',
                                'M14': 'voucher_id.partner_id${value and " ".join(list(filter(lambda l: l != False, [value.street, value.street2, value.township_id.name, value.district_id.name, value.province_id.name, value.zip]))) or ""}',
                                'N14': 'invoice_id.number${value or ""}',
                                'O14': 'invoice_line_id.account_id.code${value or ""}',
                                'P14': 'invoice_line_id.activity_group_id.name${value or ""}',
                                'Q14': 'invoice_line_id.activity_id.name${value or ""}',
                                'R14': 'invoice_line_id.price_subtotal${value or ""}',
                                'S14': 'invoice_line_id.chartfield_id.code${value or ""}',
                                'T14': 'invoice_line_id.chartfield_id.name${value or ""}',
                                'U14': 'invoice_line_id${value and ((value.chartfield_id.type == "pj:" and (value.project_id.pm_employee_id and " ".join(list(filter(lambda l: l != False, [value.project_id.pm_employee_id.with_context(lang="th_TH").title_id.name, value.project_id.pm_employee_id.with_context(lang="th_TH").first_name, value.project_id.pm_employee_id.with_context(lang="th_TH").mid_name, value.project_id.pm_employee_id.with_context(lang="th_TH").last_name]))) or "")) or (value.chartfield_id.type == "cp:" and (value.invest_construction_id.pm_employee_id and " ".join(list(filter(lambda l: l != False, [value.invest_construction_id.pm_employee_id.with_context(lang="th_TH").title_id.name, value.invest_construction_id.pm_employee_id.with_context(lang="th_TH").first_name, value.invest_construction_id.pm_employee_id.with_context(lang="th_TH").mid_name, value.invest_construction_id.pm_employee_id.with_context(lang="th_TH").last_name]))) or ""))) or ""}',
                                'V14': 'invoice_line_id${value and (value.chartfield_id.type == "pj:" and value.project_id.external_pm or "") or ""}',
                            },
                            '_TAIL_0': {
                                'G14': '${"Total"}#{font=bold;align=right}',
                                'H14': '@{sum}#{font=bold;number_format=number;align=right}',
                                'R14': '@{sum}#{font=bold;number_format=number;align=right}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Input Tax Report
        <record id="xlsx_report_input_tax" model="ir.attachment">
            <field name="res_model">xlsx.report.input.tax</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_input_tax.xlsx</field>
            <field name="name">Input Tax Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Input Tax Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'period_id.name${value or ""}',
                                'B4': 'taxbranch_id.name${value or ""}',
                            },
                            'results': {
                                'A8': 'tax_sequence_display${value or ""}',
                                'B8': 'invoice_date#{number_format=date}',
                                'C8': 'invoice_number${value or ""}',
                                'D8': 'partner_id.name${value or ""}',
                                'E8': 'partner_id.vat${value or ""}',
                                'F8': 'partner_id.taxbranch${value and (value == "00000" and "Head Office" or value) or ""}',
                                'G8': 'base${value or 0}#{number_format=number}',
                                'H8': 'amount${value or 0}#{number_format=number}',
                                'I8': 'move_number${value or ""}',
                            },
                            '_TAIL_0': {
                                'G8': '@{sum}#{font=bold;align=right;number_format=number}',
                                'H8': '@{sum}#{font=bold;align=right;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # Output Tax Report
        <record id="xlsx_report_output_tax" model="ir.attachment">
            <field name="res_model">xlsx.report.output.tax</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_output_tax.xlsx</field>
            <field name="name">Output Tax Report</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Output Tax Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'period_id.name${value or ""}',
                                'B4': 'taxbranch_id.name${value or ""}',
                            },
                            'results': {
                                'A8': 'invoice_date#{number_format=date}',
                                'B8': 'number_preprint${value or ""}',
                                'C8': 'partner_id.name${value or ""}',
                                'D8': 'partner_id.vat${value or ""}',
                                'E8': 'partner_id.taxbranch${value and (value == "00000" and "Head Office" or value) or ""}',
                                'F8': 'base${value or 0}#{number_format=number}',
                                'G8': 'amount${value or 0}#{number_format=number}',
                                'H8': 'move_id.document_id${value and value._name == "account.invoice" and value.source_document_id and value.source_document_id._name == "sale.order" and value.source_document_id.workflow_process_id and value.source_document_id.name or ""}',
                                'I8': 'move_number${value or ""}',
                                'J8': 'write_uid${value and value.with_context(lang="th_TH").display_name or ""}'
                            },
                            '_TAIL_0': {
                                'F8': '@{sum}#{font=bold;align=right;number_format=number}',
                                'G8': '@{sum}#{font=bold;align=right;number_format=number}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # CD Receivable Confirmation
        <record id="xlsx_report_cd_receivable_confirmation" model="ir.attachment">
            <field name="res_model">xlsx.report.cd.receivable.confirmation</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cd_receivable_confirmation.xlsx</field>
            <field name="name">CD Receivable Confirmation</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable CD Confirmation Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'date_report${value or ""}#{number_format=date}',
                                'B4': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.with_context(lang="th_TH").title.name, x.with_context(lang="th_TH").name]))) for x in value]) or ""}',
                                'B5': 'bank_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B6': '${env.user.with_context(lang="th_TH").display_name}',
                                'B7': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A10': 'loan_agreement_id.borrower_partner_id.search_key${value or ""}',
                                'B10': 'loan_agreement_id.borrower_partner_id${value and " ".join(list(filter(lambda l: l != False, [value.with_context(lang="th_TH").title.name, value.with_context(lang="th_TH").name]))) or ""}',
                                'C10': 'loan_agreement_id.sale_id.name${value or ""}',
                                'D10': 'loan_agreement_id.bank_id.bank_name${value or ""}',
                                'E10': 'loan_agreement_id.bank_id.bank_branch.name${value or ""}',
                                'F10': 'loan_agreement_id.name${value or ""}',
                                'G10': 'invoice_id.number${value or ""}',
                                'H10': 'invoice_id.amount_total${value or ""}',
                            },
                        },
                        'Receivable CD Confirmation Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'date_report${value or ""}#{number_format=date}',
                                'B4': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.with_context(lang="th_TH").title.name, x.with_context(lang="th_TH").name]))) for x in value]) or ""}',
                                'B5': 'bank_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B6': '${env.user.with_context(lang="th_TH").display_name}',
                                'B7': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            '_BI_': {
                                'A10': {
                                    'df': 'Receivable CD Confirmation Detail Report',
                                    # Group by A, B, C, D, E, F and add Subtotal (so we use pivot)
                                    # By scripting, we need result = ...
                                    'oper_code': """
df = df[["A", "B", "C", "D", "E", "F", "H"]]
groupby = ["A", "B", "C", "D", "E", "F"]
sum_cols = ["H"]
result = pd.pivot_table(df, index=groupby,
                        values=sum_cols,
                        aggfunc=np.sum,
                        fill_value=0,
                        margins=True,
                        margins_name="Total")
                                    """,
                                },
                            },
                        },
                    }
                }
            </field>
        </record>

        # CD Receivable Planning
        <record id="xlsx_report_cd_receivable_planning" model="ir.attachment">
            <field name="res_model">xlsx.report.cd.receivable.planning</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cd_receivable_planning.xlsx</field>
            <field name="name">CD Receivable Planning</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable CD Planning Detail Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.with_context(lang="th_TH").title.name, x.with_context(lang="th_TH").name]))) for x in value]) or ""}',
                                'B8': 'bank_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B9': '${env.user.with_context(lang="th_TH").display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A13': 'loan_agreement_id.name${value or ""}',
                                'B13': 'loan_agreement_id.sale_id.name${value or ""}',
                                'C13': 'invoice_plan_id.installment${value or ""}',
                                'D13': 'invoice_plan_id.date_invoice${value or ""}#{number_format=date}',
                                'E13': 'fiscalyear_name${value or ""}',
                                'F13': 'q1${value or 0}',
                                'G13': 'q2${value or 0}',
                                'H13': 'q3${value or 0}',
                                'I13': 'q4${value or 0}',
                                'J13': 'amount_total${value or 0}',
                            },
                        },
                        'Receivable CD Planning Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.with_context(lang="th_TH").title.name, x.with_context(lang="th_TH").name]))) for x in value]) or ""}',
                                'B8': 'bank_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B9': '${env.user.with_context(lang="th_TH").display_name}',
                                'B10': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            '_BI_': {
                                'A13': {
                                    'df': 'Receivable CD Planning Detail Report',
                                    # Group by E and add Subtotal (so we use pivot)
                                    # By scripting, we need result = ...
                                    'oper_code': """
df = df[["E", "F", "G", "H", "I", "J"]]
groupby = ["E"]
sum_cols = ["F", "G", "H", "I", "J"]
result = pd.pivot_table(df, index=groupby,
                        values=sum_cols,
                        aggfunc=np.sum,
                        fill_value=0,
                        margins=True,
                        margins_name="Total")
                                    """,
                                },
                            },
                        },
                    }
                }
            </field>
        </record>

        # SLA Receipt
        <record id="xlsx_report_sla_receipt" model="ir.attachment">
            <field name="res_model">xlsx.report.sla.receipt</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_sla_receipt.xlsx</field>
            <field name="name">SLA Receipt</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'SLA Receipt Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'user_ids${value and ", ".join([x.with_context(lang="th_TH").display_name for x in value]) or ""}',
                                'B8': '${env.user.with_context(lang="th_TH").display_name}',
                                'B9': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'results': {
                                'A12': 'name${value or ""}',
                                'B12': 'validate_user_id${value and value.with_context(lang="th_TH").display_name or ""}',
                                'C12': 'date_accept${value or ""}#{number_format=date}',
                                'D12': 'receipt_date${value or ""}#{number_format=date}',
                                'E12': '${"=NETWORKDAYS(?(C12),?(D12),Holliday!B:B)"}#{number_format=number}',
                                'F12': "${'=IF(?(E12)&lt;=2,1,0)'}#{number_format=number}",
                                'G12': "${'=IF(?(E12)=3,1,0)'}#{number_format=number}",
                                'H12': "${'=IF(?(E12)&gt;3,1,0)'}#{number_format=number}",
                            },
                            '_TAIL_0': {
                                'E12': '@{sum}#{font=bold;number_format=number;align=right}',
                                'F12': '@{sum}#{font=bold;number_format=number;align=right}',
                                'G12': '@{sum}#{font=bold;number_format=number;align=right}',
                                'H12': '@{sum}#{font=bold;number_format=number;align=right}',
                            }
                        }
                    }
                }
            </field>
        </record>

        # CD Receivable Balance Sheet Summary
        <record id="xlsx_report_cd_receivable_balance_sheet_summary" model="ir.attachment">
            <field name="res_model">xlsx.report.cd.receivable.balance.sheet.summary</field>
            <field name="datas"></field>
            <field name="datas_fname">xlsx_report_cd_receivable_balance_sheet_summary.xlsx</field>
            <field name="name">CD Receivable Balance Sheet Summary</field>
            <field name="parent_id" eval="ref('dir_account_reports')"/>
            <field name="description">
                {
                    '__EXPORT__': {
                        'Receivable CD Balance Sheet Summary Report': {
                            '_HEAD_': {
                                'A1': '${env.user.with_context(lang="en_US").company_id.partner_id.name}',
                                'B3': 'fiscalyear_start_id.name${value or ""}',
                                'D3': 'fiscalyear_end_id.name${value or ""}',
                                'B4': 'filter${value and dict(filter_no="No Filters", filter_date="Dates", filter_period="Periods")[value] or ""}',
                                'B5': 'period_start_id.name${value or ""}',
                                'D5': 'period_end_id.name${value or ""}',
                                'B6': 'date_start${value or ""}#{number_format=date}',
                                'D6': 'date_end${value or ""}#{number_format=date}',
                                'B7': 'partner_ids${value and ", ".join([" ".join(list(filter(lambda l: l != False, [x.with_context(lang="th_TH").title.name, x.with_context(lang="th_TH").name]))) for x in value]) or ""}',
                                'B8': 'mou_ids${value and ", ".join([x.name for x in value]) or ""}',
                                'B9': 'account_ids${value and ", ".join([x.code for x in value]) or ""}',
                                'B10': '${env.user.with_context(lang="th_TH").display_name}',
                                'B11': '${time.strftime("%d/%m/%Y")}#{number_format=date}',
                            },
                            'balance_sheet_summary_results': {
                                'A14': 'borrower_partner_id.search_key${value or ""}',
                                'B14': 'borrower_partner_id${value and " ".join(list(filter(lambda l: l != False, [value.with_context(lang="th_TH").title.name, value.with_context(lang="th_TH").name]))) or ""}',
                                'C14': 'mou_id.name${value or ""}',
                                'D14': 'sale_id.name${value or ""}',
                                'E14': 'bank_id.bank_name${value or ""}',
                                'F14': 'bank_id.bank_branch.name${value or ""}',
                                'G14': 'name${value or ""}',
                                'H14': '${"=IFERROR(VLOOKUP(?(L14),brought_forward_report!A1:B5000,2,0),0)"}#{number_format=number}',
                                'I14': '${"=IFERROR(VLOOKUP(?(L14),received_report!A1:C5000,2,0),0)"}#{number_format=number}',
                                'J14': '${"=IFERROR(VLOOKUP(?(L14),received_report!A1:C5000,3,0),0)"}#{number_format=number}',
                                'K14': '${"=?(H14)+?(I14)-?(J14)"}#{number_format=number}',
                                'L14': 'id${value or ""}',
                            },
                        },
                        'brought_forward_detail_report': {
                            'brought_forward_results': {
                                'A2': 'loan_agreement_id.id${value or ""}',
                                'B2': 'invoice_id${value and (value.type == "in_invoice" and value.amount_total or (-1) * value.amount_total) or 0}#{number_format=number}',
                            },
                        },
                        'brought_forward_report': {
                            '_BI_': {
                                'A2': {
                                    'df': 'brought_forward_detail_report',
                                    # Group by A. User will have to do subtotal themselves
                                    'oper_code': 'df[["A", "B"]].groupby(["A"]).sum()',
                                },
                            },
                        },
                        'received_detail_report': {
                            'received_results': {
                                'A2': 'loan_agreement_id.id${value or ""}',
                                'B2': 'invoice_id${value and (value.type == "in_invoice" and value.amount_total or 0) or 0}#{number_format=number}',
                                'C2': 'invoice_id${value and (value.type == "out_invoice" and value.amount_total or 0) or 0}#{number_format=number}',
                            },
                        },
                        'received_report': {
                            '_BI_': {
                                'A2': {
                                    'df': 'received_detail_report',
                                    # Group by A. User will have to do subtotal themselves
                                    'oper_code': 'df[["A", "B", "C"]].groupby(["A"]).sum()',
                                },
                            },
                        },
                    }
                }
            </field>
        </record>
    </data>
</openerp>
